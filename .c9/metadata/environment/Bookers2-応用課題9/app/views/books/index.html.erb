{"filter":false,"title":"index.html.erb","tooltip":"/Bookers2-応用課題9/app/views/books/index.html.erb","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":10,"column":0},"end":{"row":10,"column":38},"action":"remove","lines":["      <%= render 'users/search.bar' %>"],"id":1},{"start":{"row":9,"column":38},"end":{"row":10,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""]},{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":18,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["class ChatsController < ApplicationController","  def show","    @user = User.find(params[:id])","    # ログインユーザーのidが入ったroom_idのみを配列で取得","    rooms = current_user.user_rooms.pluck(:room_id)","    # user_idが@user　且つ　room_idがrooms配列の中にある数値　のものを取得","    user_rooms = UserRoom.find_by(user_id: @user.id, room_id: rooms)","","    if user_rooms.nil?","      # 取得していない場合、roomのレコードとuser_roomのレコードを作成","      @room = Room.new","      @room.save","      UserRoom.create(user_id: current_user.id, room_id: @room.id)","      UserRoom.create(user_id: @user.id, room_id: @room.id)","    else","      # 取得していたら、roomテーブルのレコードを@roomに代入","      @room = user_rooms.room","    end","    @chats = @room.chats","    @chat = Chat.new(room_id: @room.id)","  end","","  def create","    @chat = current_user.chats.new(chat_params)","    @chat.save","  end","","  private","","  def chat_params","    params.require(:chat).permit(:message, :room_id)","  end","end",""],"id":3}],[{"start":{"row":18,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["class ChatsController < ApplicationController","  def show","    @user = User.find(params[:id])","    # ログインユーザーのidが入ったroom_idのみを配列で取得","    rooms = current_user.user_rooms.pluck(:room_id)","    # user_idが@user　且つ　room_idがrooms配列の中にある数値　のものを取得","    user_rooms = UserRoom.find_by(user_id: @user.id, room_id: rooms)","","    if user_rooms.nil?","      # 取得していない場合、roomのレコードとuser_roomのレコードを作成","      @room = Room.new","      @room.save","      UserRoom.create(user_id: current_user.id, room_id: @room.id)","      UserRoom.create(user_id: @user.id, room_id: @room.id)","    else","      # 取得していたら、roomテーブルのレコードを@roomに代入","      @room = user_rooms.room","    end","    @chats = @room.chats","    @chat = Chat.new(room_id: @room.id)","  end","","  def create","    @chat = current_user.chats.new(chat_params)","    @chat.save","  end","","  private","","  def chat_params","    params.require(:chat).permit(:message, :room_id)","  end","end",""],"id":4},{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["",""]},{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""]},{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":15,"column":0},"end":{"row":15,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1610345479012,"hash":"5af3b0e8a41df8dbb787872619432cbb84fd2dcd"}